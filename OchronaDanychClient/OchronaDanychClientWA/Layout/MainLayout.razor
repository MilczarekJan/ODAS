@using Blazored.LocalStorage;
@using System.Security.Claims;
@inherits LayoutComponentBase

@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
<div class="page">
    <div class="sidebar">
     <CascadingAuthenticationState>
        <AuthorizeView>
            <NavMenu />
        </AuthorizeView>
     </CascadingAuthenticationState>
    </div>

    <main>
        <div class="top-row px-4">
            <CascadingAuthenticationState>
            <AuthorizeView>
                <Authorized>
                    <div>
                        @context.User.Identity.Name |
                        @context.User.Claims.Where(c => c.Type == ClaimTypes.Email).FirstOrDefault().Value
                    </div>

                    <a href="#" @onclick="Logout">Logout</a>
                </Authorized>
                <NotAuthorized>
                </NotAuthorized>
            </AuthorizeView>
            </CascadingAuthenticationState>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>


@code {
    private async Task Logout()
    {
        await LocalStorageService.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("/");
    }
}