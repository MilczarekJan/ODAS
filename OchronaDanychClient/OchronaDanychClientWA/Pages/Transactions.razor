@page "/transactions"
@using OchronaDanychShared.Models
@using Blazored.LocalStorage;
@using System.Security.Claims;
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager NavigationManager
@inject OchronaDanychShared.Services.GetTransfersService getTransfersService

<h3>Get Shoes</h3>
<button class="btn btn-primary" @onclick="GetTransfersFromApi">Show Transfers</button>
@if (transfersList != null && transfersList.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Amount</th>
                <th>Recipient</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var shoe in transfersList)
            {
                <tr>
                    <td>@shoe.Title</td>
                    <td>@shoe.Amount</td>
                    <td>@shoe.Recipient_Name</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No transfers available.</p>
}

@code {
    //IMyApiService _shoeApiClient = new MyApiService();
    private List<BankTransfer> transfersList;
    public async Task GetTransfersFromApi()
    {
        var auth = await authenticationStateProvider.GetAuthenticationStateAsync();
        var email = auth.User.Claims.Where(c => c.Type == ClaimTypes.Email).FirstOrDefault().Value;
        var token = await LocalStorageService.GetItemAsStringAsync("authToken");
        token = token.Replace("\"", "");
        transfersList = await getTransfersService.GetTransfersFromApi(token);
    }
}
